1.
source code:
b<-c(22, 28, 10)
c<-c(20, 40, 40)
cov(b,c)
a<-c(18, 2, 20)
b<-c(22, 28, 10)
c<-c(20, 40, 40)
pre<-cbind(a,b,c)
cov(pre)
b<-c(22, 28, 10)
c<-c(20, 40, 40)
cor(b,c)
a<-c(18, 2, 20)
b<-c(22, 28, 10)
c<-c(20, 40, 40)
pre<-cbind(a,b,c)
cor(pre)
output:
screenshot:
 
2.
source code:
data<-c(1, 1, 5, 5, 5, 5, 5, 8, 8, 10, 10, 10, 10, 12, 14, 14, 14, 15, 15, 15, 15, 15, 15, 18, 18, 18, 18, 18, 18, 18, 18, 20, 20, 20, 20, 20, 20, 20, 21, 21, 21, 21, 25, 25, 25, 25, 25, 28, 28, 30, 30, 30)
bin<-length(data)/3
bins<-cut(data, breaks = c(-Inf, quantile(data, probs = seq(0,1, 1/3)),Inf), include.lowest = TRUE)
tapply(data,bins,mean)
tapply(data, bins,function(x) c(min(x),max(x)))
hist(data,breaks = 3, main = "Histogram", xlab = "prices")
output:
 
3.
source code:
A <- c(76, 35, 47, 64, 95, 66, 89, 36, 84)
B <- c(51, 56, 84, 60, 59, 70, 63, 66, 50)

mean_A <- mean(A)
median_A <- median(A)
range_A <- max(A) - min(A)
mean_B <- mean(B)
median_B <- median(B)
range_B <- max(B) - min(B)

combined_data <- data.frame(Class = c(rep("A", length(A)), rep("B", length(B))), Score = c(A, B))
boxplot(Score ~ Class, data = combined_data, col = c("blue", "green"), xlab = "Class", ylab = "Scores", main = "Boxplot of Scores by Class")
(II)

combined_data <- data.frame(Class = c(rep("A", length(A)), rep("B", length(B))), Score = c(A, B))

boxplot(Score ~ Class, data = combined_data, col = c("blue", "green"), xlab = "Class", ylab = "Scores", main = "Boxplot of Scores by Class")
screenshot:
 
4.
source code:
data <- c(200, 300, 400, 600, 1000)
min_value <- 50000
max_value <- 100000
v <- 80
min_max_normalized <- (v - min_value) / (max_value - min_value)
min_max_normalized
mean_value <- mean(data)
standard_deviation <- sd(data)
z_score_normalized <- (v - mean_value) / standard_deviation
z_score_normalized
screenshot:
 
5.
source code:
data("AirPassengers")
hist(AirPassengers, breaks = seq(100, 700, by = 150), col = "blue", main=" Histogram for Airpassengers", xlab = "Passenger count", ylab = "Frequency")

screenshot:
 
6.
source code:
data("mtcars")
plot(mtcars$mpg, type = "l", col = "blue", xlab = "Index", ylab = "Miles per Gallon", main = "Line Chart of mpg and qsec")
lines(mtcars$qsec, col = "red")
legend("topright", legend = c("mpg", "qsec"), col = c("blue", "red"), lty = 1, cex = 0.8)
screenshot:
 
7.
source code:
data("iris")
str(iris)
plot(iris$Sepal.Length, iris$Petal.Length, main = "Scatter plot of Sepal.Length vs. Petal.Length",xlab = "Sepal.Length", ylab = "Petal.Length", col = "blue", pch = 16)
model <- lm(Petal.Length ~ Sepal.Length, data = iris)
abline(model, col = "red")
new_data <- data.frame(Sepal.Length = 5.5)
predicted_Petal_Length <- predict(model, newdata = new_data)
predicted_Petal_Length
screenshot:
 
8.
source code:
data("mtcars")
boxplot(mpg ~ cyl, data = mtcars, main = "Boxplot", xlab = "number of cylinders", ylab = "miles per gallon", col= "red")
screenshot:
 
9.
source code:
score <- c(20, 25, 30, 32, 35, 38, 40, 45, 50, 52, 55, 56, 58, 59, 60, 62, 65, 70, 75, 80, 85)
boxplot(score, col = "lightblue", main = "Box Plot of Points Scored by Tennis Players", ylab = "Points Scored")
screenshot:
 
10.
source code:

# Load required libraries
library(ggplot2)
library(dplyr)

# Load the dataset
diabetes_data <- read.csv("C:/Users/grk66/OneDrive/Documents/diabetes (1).csv")

# Create a scatterplot
scatter_plot <- ggplot(diabetes_data, aes(x = Age, y = BloodPressure, color = Age)) +
  geom_point() +
  labs(title = "Blood Pressure vs Age",
       x = "Age",
       y = "Blood Pressure") +
  theme_minimal()

# Create a bar chart
bar_chart <- diabetes_data %>%
  group_by(Age) %>%
  summarize(mean_blood_pressure = mean(BloodPressure)) %>%
  ggplot(aes(x = factor(Age), y = mean_blood_pressure, fill = factor(Age))) +
  geom_bar(stat = "identity") +
  labs(title = "Average Blood Pressure by Age",
       x = "Age",
       y = "Average Blood Pressure") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

# Display the plots
scatter_plot
bar_chart
screenshot:
 











